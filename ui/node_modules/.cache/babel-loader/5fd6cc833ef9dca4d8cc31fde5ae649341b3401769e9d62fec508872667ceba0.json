{"ast":null,"code":"var _jsxFileName = \"/home/sark/Workspace/Sarkware/cms/ui/src/utils/layout.js\";\nimport React, { lazy, Suspense } from 'react';\nimport app_config from '../configs/config';\nimport Spinner from '../components/spiner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayoutLoader = () => {\n  console.log(\"pathname : \" + location.pathname);\n  let layout = null;\n  let layoutConfig = null;\n  const controller = window[\"_controller\"];\n  if (controller.utils.isAuthenticated()) {\n    layoutConfig = app_config.routes.authorized.find(item => item.getRole === controller.utils.getRole());\n  } else {\n    if (location.pathname === \"\" || location.pathname === \"/\") {\n      layoutConfig = app_config.routes.unauthorized.find(item => item.layout === \"registration\");\n    } else {\n      layoutConfig = app_config.routes.unauthorized.find(item => item.layout === location.pathname);\n    }\n  }\n  layout = layoutConfig ? layoutConfig.layout : null;\n  if (!layout) {\n    /**\n     * \n     * If no layout found, fall back to 'login' layout \n     * We assume that there is alway a layout called 'login'\n     * \n     */\n    layout = 'registration';\n  }\n  const LayoutComponent = /*#__PURE__*/lazy(() => import(`../layouts/${layout}`));\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(LayoutComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = LayoutLoader;\nexport default LayoutLoader;\nvar _c;\n$RefreshReg$(_c, \"LayoutLoader\");","map":{"version":3,"names":["React","lazy","Suspense","app_config","Spinner","jsxDEV","_jsxDEV","LayoutLoader","console","log","location","pathname","layout","layoutConfig","controller","window","utils","isAuthenticated","routes","authorized","find","item","getRole","unauthorized","LayoutComponent","fallback","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/sark/Workspace/Sarkware/cms/ui/src/utils/layout.js"],"sourcesContent":["import React, { lazy, Suspense } from 'react';\nimport app_config from '../configs/config';\nimport Spinner from '../components/spiner';\n\nconst LayoutLoader = () => {    console.log(\"pathname : \"+ location.pathname);\n\n    let layout = null;\n    let layoutConfig = null;\n    const controller = window[\"_controller\"];\n\n    if (controller.utils.isAuthenticated()) {                \n        layoutConfig = app_config.routes.authorized.find(item => item.getRole === controller.utils.getRole());        \n    } else {\n        if (location.pathname === \"\" || location.pathname === \"/\") {\n            layoutConfig = app_config.routes.unauthorized.find(item => item.layout === \"registration\");\n        } else {\n            layoutConfig = app_config.routes.unauthorized.find(item => item.layout === location.pathname);\n        }        \n    }\n\n    layout = layoutConfig ? layoutConfig.layout : null;\n\n    if (!layout) {\n        /**\n         * \n         * If no layout found, fall back to 'login' layout \n         * We assume that there is alway a layout called 'login'\n         * \n         */\n        layout = 'registration';\n    }\n\n    const LayoutComponent = lazy(() => import(`../layouts/${layout}`));\n\n    return (\n        <Suspense fallback={<Spinner />}>\n            <LayoutComponent />\n        </Suspense>\n    );\n\n};\n\nexport default LayoutLoader;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAKC,OAAO,CAACC,GAAG,CAAC,aAAa,GAAEC,QAAQ,CAACC,QAAQ,CAAC;EAEzE,IAAIC,MAAM,GAAG,IAAI;EACjB,IAAIC,YAAY,GAAG,IAAI;EACvB,MAAMC,UAAU,GAAGC,MAAM,CAAC,aAAa,CAAC;EAExC,IAAID,UAAU,CAACE,KAAK,CAACC,eAAe,CAAC,CAAC,EAAE;IACpCJ,YAAY,GAAGV,UAAU,CAACe,MAAM,CAACC,UAAU,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,KAAKR,UAAU,CAACE,KAAK,CAACM,OAAO,CAAC,CAAC,CAAC;EACzG,CAAC,MAAM;IACH,IAAIZ,QAAQ,CAACC,QAAQ,KAAK,EAAE,IAAID,QAAQ,CAACC,QAAQ,KAAK,GAAG,EAAE;MACvDE,YAAY,GAAGV,UAAU,CAACe,MAAM,CAACK,YAAY,CAACH,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACT,MAAM,KAAK,cAAc,CAAC;IAC9F,CAAC,MAAM;MACHC,YAAY,GAAGV,UAAU,CAACe,MAAM,CAACK,YAAY,CAACH,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACT,MAAM,KAAKF,QAAQ,CAACC,QAAQ,CAAC;IACjG;EACJ;EAEAC,MAAM,GAAGC,YAAY,GAAGA,YAAY,CAACD,MAAM,GAAG,IAAI;EAElD,IAAI,CAACA,MAAM,EAAE;IACT;AACR;AACA;AACA;AACA;AACA;IACQA,MAAM,GAAG,cAAc;EAC3B;EAEA,MAAMY,eAAe,gBAAGvB,IAAI,CAAC,MAAM,MAAM,CAAC,cAAcW,MAAM,EAAE,CAAC,CAAC;EAElE,oBACIN,OAAA,CAACJ,QAAQ;IAACuB,QAAQ,eAAEnB,OAAA,CAACF,OAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;IAAAC,QAAA,eAC5BxB,OAAA,CAACkB,eAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAGnB,CAAC;AAACE,EAAA,GApCIxB,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}