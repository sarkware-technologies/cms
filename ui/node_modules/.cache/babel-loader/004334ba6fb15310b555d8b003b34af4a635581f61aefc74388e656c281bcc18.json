{"ast":null,"code":"import React, { createRef } from \"react\";\nimport app_config from \"../configs/config\";\nexport default class Utils {\n  constructor() {\n    this.indicate = _msg => {\n      this.indicatorCounter++;\n      this.indicator.current.show(_msg);\n    };\n    this.alert = (_msg, _type) => {\n      this.alert.current.show(_msg, _type);\n    };\n    this.confirm = _config => {\n      this.confirm.current.show(_msg, _type);\n    };\n    this.isAuthenticated = () => {\n      const user = sessionStorage.getItem(\"pharmarack_cms_user\");\n      const token = sessionStorage.getItem(\"pharmarack_cms_token\");\n      const role = sessionStorage.getItem(\"pharmarack_cms_role\");\n      return user && token && role;\n    };\n    this.getToken = () => {\n      if (app_config.session.type === \"sessionstorage\") {\n        return sessionStorage.getItem(app_config.session.keys.token);\n      } else if (app_config.session.type === \"localstorage\") {\n        return localStorage.getItem(app_config.session.keys.token);\n      } else {\n        return this.getCookie(app_config.session.keys.token);\n      }\n    };\n    this.getUser = () => {\n      if (app_config.session.type === \"sessionstorage\") {\n        return sessionStorage.getItem(app_config.session.keys.user);\n      } else if (app_config.session.type === \"localstorage\") {\n        return localStorage.getItem(app_config.session.keys.user);\n      } else {\n        return this.getCookie(app_config.session.keys.user);\n      }\n    };\n    this.getRole = () => {\n      if (app_config.session.type === \"sessionstorage\") {\n        return sessionStorage.getItem(app_config.session.keys.role);\n      } else if (app_config.session.type === \"localstorage\") {\n        return localStorage.getItem(app_config.session.keys.role);\n      } else {\n        return this.getCookie(app_config.session.keys.role);\n      }\n    };\n    this.getCookie = _name => {\n      const value = `; ${document.cookie}`;\n      const parts = value.split(`; ${_name}=`);\n      if (parts.length === 2) return parts.pop().split(';').shift();\n      return null;\n    };\n    /**\n     * \n     * Holds the reference to the alert component\n     * \n     */\n    this.alert = /*#__PURE__*/createRef();\n\n    /**\n     * \n     * Holds the reference to the alert component\n     * \n     */\n    this.confirm = /*#__PURE__*/createRef();\n\n    /**\n     * \n     * This is the reference to the indicator component \n     * \n     */\n    this.indicator = /*#__PURE__*/createRef();\n\n    /**\n     * \n     * Counter to keep track of the number of time indicator is called\n     * \n     */\n    this.indicatorCounter = 0;\n  }\n}","map":{"version":3,"names":["React","createRef","app_config","Utils","constructor","indicate","_msg","indicatorCounter","indicator","current","show","alert","_type","confirm","_config","isAuthenticated","user","sessionStorage","getItem","token","role","getToken","session","type","keys","localStorage","getCookie","getUser","getRole","_name","value","document","cookie","parts","split","length","pop","shift"],"sources":["/home/sark/Workspace/Sarkware/cms/ui/src/utils/utils.js"],"sourcesContent":["import React, { createRef } from \"react\";\nimport app_config from \"../configs/config\";\n\nexport default class Utils {\n\n    constructor () {\n\n        /**\n         * \n         * Holds the reference to the alert component\n         * \n         */\n        this.alert = createRef();\n\n        /**\n         * \n         * Holds the reference to the alert component\n         * \n         */\n        this.confirm = createRef();\n\n        /**\n         * \n         * This is the reference to the indicator component \n         * \n         */\n        this.indicator = createRef();\n\n        /**\n         * \n         * Counter to keep track of the number of time indicator is called\n         * \n         */\n        this.indicatorCounter = 0;\n\n    }\n\n    indicate = (_msg) => {\n        this.indicatorCounter++;\n        this.indicator.current.show(_msg);\n    };\n\n    alert = (_msg, _type) => {\n        this.alert.current.show(_msg, _type);\n    };\n\n    confirm = (_config) => {\n        this.confirm.current.show(_msg, _type);\n    };\n\n    isAuthenticated = () => {\n\n        const user = sessionStorage.getItem(\"pharmarack_cms_user\");\n        const token = sessionStorage.getItem(\"pharmarack_cms_token\");\n        const role = sessionStorage.getItem(\"pharmarack_cms_role\");\n    \n        return user && token && role;\n\n    };\n\n    getToken = () => {\n\n        if (app_config.session.type === \"sessionstorage\") {\n            return sessionStorage.getItem(app_config.session.keys.token);\n        } else if (app_config.session.type === \"localstorage\") {\n            return localStorage.getItem(app_config.session.keys.token);\n        } else {            \n            return this.getCookie(app_config.session.keys.token);   \n        }\n\n    };\n\n    getUser = () => {\n\n        if (app_config.session.type === \"sessionstorage\") {\n            return sessionStorage.getItem(app_config.session.keys.user);\n        } else if (app_config.session.type === \"localstorage\") {\n            return localStorage.getItem(app_config.session.keys.user);\n        } else {            \n            return this.getCookie(app_config.session.keys.user);   \n        }\n\n    };\n\n    getRole = () => {\n\n        if (app_config.session.type === \"sessionstorage\") {\n            return sessionStorage.getItem(app_config.session.keys.role);\n        } else if (app_config.session.type === \"localstorage\") {\n            return localStorage.getItem(app_config.session.keys.role);\n        } else {            \n            return this.getCookie(app_config.session.keys.role);   \n        }\n\n    };\n\n    getCookie = (_name) => {\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; ${_name}=`);\n        if (parts.length === 2) return parts.pop().split(';').shift();\n        return null;\n    };\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}