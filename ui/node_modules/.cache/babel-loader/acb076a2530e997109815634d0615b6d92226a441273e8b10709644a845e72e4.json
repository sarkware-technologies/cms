{"ast":null,"code":"var _jsxFileName = \"/home/sark/Workspace/Sarkware/cms/ui/src/controller.js\";\nimport React, { createRef } from \"react\";\nimport Utils from \"./utils/utils\";\nimport LayoutLoader from \"./utils/layout\";\n\n/**\n *\n *\n * @author : Sark\n * @version: 1.0\n *\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Controller extends React.Component {\n  constructor(props) {\n    super(props);\n\n    /**\n     * \n     * Used to store the snapshot of the contexts\n     * \n     */\n    this.render = () => /*#__PURE__*/_jsxDEV(LayoutLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 20\n    }, this);\n    this.snapshot = {};\n\n    /**\n     * \n     * Holds the current name of the context \n     * \n     */\n    this.current = null;\n\n    /**\n     * \n     * Holds the reference to the context bar component\n     * \n     */\n    this.ContextBar = /*#__PURE__*/createRef();\n\n    /**\n     * \n     * This is the global state of the application\n     * we use to contorl the theme, locale and menus\n     * \n     */\n    this.state = {\n      theme: \"\",\n      locale: \"\",\n      menus: []\n    };\n\n    /**\n     * \n     * \n     * \n     */\n    this.utils = new Utils();\n\n    /**\n     * \n     * Since app is the root component, we can use this bucket to store shared data\n     * which needs to be fetched only once and used across the application\n     * \n     */\n    this.bucket = {};\n\n    /**\n     * \n     * \n     * \n     */\n    window[\"_controller\"] = this;\n  }\n}","map":{"version":3,"names":["React","createRef","Utils","LayoutLoader","jsxDEV","_jsxDEV","Controller","Component","constructor","props","render","fileName","_jsxFileName","lineNumber","columnNumber","snapshot","current","ContextBar","state","theme","locale","menus","utils","bucket","window"],"sources":["/home/sark/Workspace/Sarkware/cms/ui/src/controller.js"],"sourcesContent":["import React, { createRef } from \"react\";\nimport Utils from \"./utils/utils\";\nimport LayoutLoader from \"./utils/layout\";\n\n/**\n *\n *\n * @author : Sark\n * @version: 1.0\n *\n *\n */\nexport default class Controller extends React.Component {\n    \n    constructor(props) {\n\n        super(props);\n\n        /**\n         * \n         * Used to store the snapshot of the contexts\n         * \n         */\n        this.snapshot = {};\n        \n        /**\n         * \n         * Holds the current name of the context \n         * \n         */\n        this.current = null;\n        \n        /**\n         * \n         * Holds the reference to the context bar component\n         * \n         */\n        this.ContextBar = createRef();                \n        \n        /**\n         * \n         * This is the global state of the application\n         * we use to contorl the theme, locale and menus\n         * \n         */\n        this.state = { theme: \"\", locale: \"\", menus: [] };\n\n        /**\n         * \n         * \n         * \n         */\n        this.utils = new Utils();\n\n        /**\n         * \n         * Since app is the root component, we can use this bucket to store shared data\n         * which needs to be fetched only once and used across the application\n         * \n         */\n        this.bucket = {};\n\n        /**\n         * \n         * \n         * \n         */\n        window[\"_controller\"] = this;\n\n    };      \n\n    render = () => <LayoutLoader />;\n\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,YAAY,MAAM,gBAAgB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AAQA,eAAe,MAAMC,UAAU,SAASN,KAAK,CAACO,SAAS,CAAC;EAEpDC,WAAWA,CAACC,KAAK,EAAE;IAEf,KAAK,CAACA,KAAK,CAAC;;IAEZ;AACR;AACA;AACA;AACA;IAJQ,KAqDJC,MAAM,GAAG,mBAAML,OAAA,CAACF,YAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAhD3B,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;;IAElB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,OAAO,GAAG,IAAI;;IAEnB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,UAAU,gBAAGhB,SAAS,CAAC,CAAC;;IAE7B;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACiB,KAAK,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC;;IAEjD;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,KAAK,GAAG,IAAIpB,KAAK,CAAC,CAAC;;IAExB;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACqB,MAAM,GAAG,CAAC,CAAC;;IAEhB;AACR;AACA;AACA;AACA;IACQC,MAAM,CAAC,aAAa,CAAC,GAAG,IAAI;EAEhC;AAIJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}